FORMAT: 1A
HOST: http://private-82de94-classroomreservation.apiary-mock.com/

# Classroom-Reservation

A simple classroom reservation system. You can query idle classroom, reservation classroom, and approve 
reservations on it.

##  Student Data Interface

### Get student information [GET /api/users/student]
Don't need anything in request, identify the users by session.<br/>
@Permission: Student
+ Response 200 (application/json)

        {
            StudentId: 15331124,
            StudentPwd: "",
            StudentName: "王芳",
            Permission: true
        }

###  Modify student information [POST /api/users/student]
Modify the student account information, just for password.<br/>
@Permission: Student
+ Request (application/json)

        {
            id: 15331124,
            StudentPwd:"student123"
        }

+ Response 200 (application/json)

### Get student information list [GET /api/users/students]
Get student information list.<br/>
@Permission: Admin

+ Response 200 (application/json)

        [
            {
                StudentId: 15331124,
                StudentPwd: "",
                StudentName: "王芳",
                Permission: true
            },
            {
                StudentId: 15331125,
                StudentPwd: "",
                StudentName: "赵红",
                Permission: true
            },
            {
                StudentId: 16331124,
                StudentPwd: "",
                StudentName: "王芸",
                Permission: true
            }
        ]

### Add a student to the database [POST /api/users/students]
Add a student account to the database.<br/> 
@Permission: Admin

+ Request (application/json)

        {
            StudentId: 15331125,
            StudentPwd: "student123",
            StudentName: "赵红",
            Permission: true
        }

+ Response 200 (application/json)

### Get student information by id [GET /api/users/students/{id}]
Get a student information by id, need admin permission.<br />
@Permission: Admin
+ Request (application/json)

        {
            id: "15331124"
        }

+ Response 200 (application/json)

        {
            StudentId: 15331124,
            StudentPwd: "",
            StudentName: "王芳",
            Permission: true
        }

### Modify student information by id [PUT /api/users/students/{id}]
Modify a student account information, just for password. It needs a admin permission.
If sucess, response 200; if failed, response 500.<br/>
@Permission: Admin
+  Request (application/json)

        {
            StudentId: 15331124,
            StudentPwd:"student123"
        }

+ Response 200 (application/json)    

### Delete student information by id [DELETE /api/users/students/{id}]
Delete a student account information, need admin permission.
If sucess, response 200; if failed, response 500.<br/>
@Permission: Admin

+ Request (application/json)

        {
            StudentId: 15331124
        }

+ Response 200 (application/json)

##  Approver Data Interface

### Get approver information [GET /api/users/approver]
Don't need anything in request, identify the users by session.<br/>
@Permission: Approver

+ Response 200 (application/json)

        {
            ApproverId: 10331124,
            ApproverPwd: "",
            ApproverName: "李怡",
            DepartmentId: 123,
            Permission: true
        }

###  Modify approver information [POST /api/users/approver]
Modify the approver account information, just for password.<br/>
@Permission: Approver

+ Request (application/json)

        {
            ApproverId: 10331124,
            ApproverPwd:"approver123"
        }

+ Response 200 (application/json)

### Get approver information list [GET /api/users/approvers]
Get approver information list.<br/>
@Permission: Admin

+ Response 200 (application/json)

        [
            {
                ApproverId: 10331124,
                ApproverPwd: "",
                ApproverName: "李怡",
                DepartmentId: 123,
                Permission: true
            },
            {
                ApproverId: 10331125,
                ApproverPwd: "",
                ApproverName: "宋晓",
                DepartmentId: 124,
                Permission: true
            },
            {
                ApproverId: 10031124,
                ApproverPwd: "",
                ApproverName: "李芸",
                DepartmentId: 125,
                Permission: true
            }
        ]

### Add a approver to the database [POST /api/users/approvers]
Add a approver account to the database.<br/> 
@Permission: Admin

+ Request (application/json)

        {
            ApproverId: 10331125,
            ApproverPwd: "",
            ApproverName: "宋晓",
            DepartmentId: 124,
            Permission: true
        }
        
+ Response 200 (application/json)

### Get approver information by id [GET /api/users/approvers/{id}]
Get a approver information by id, need admin permission.<br/>
@Permission: Admin

+ Request (application/json)

        {
            ApproverId: 10331124
        }

+ Response 200 (application/json)

        {
            ApproverId: 10331124,
            ApproverPwd: "",
            ApproverName: "李怡",
            DepartmentId: 123,
            Permission: true
        }

### Modify approver information by id [PUT /api/users/approvers/{id}]
Modify a approver account information, just for password. It needs a admin permission.
If sucess, response 200; if failed, response 500.<br/>
@Permission: Admin

+  Request (application/json)

        {
            ApproverId: 10331124,
            ApproverPwd:"approver123"
        }

+ Response 200 (application/json)    

### Delete approver information by id [DELETE /api/users/approvers/{id}]
Delete a student account information, need admin permission.
If sucess, response 200; if failed, response 500.<br/>
@Permission: Admin

+ Request (application/json)

        {
            ApproverId: 10331124
        }

+ Response 200 (application/json)

##  Admin Data Interface

### Get admin information [GET /api/users/admin]
Don't need anything in request, identify the users by session.<br/>
@Permission: Admin
+ Response 200 (application/json)

        {
            AdminId: 11331125,
            AdminPwd: "",
            AdminName: "李阳",
            Permission: true
        }

###  Modify admin information [POST /api/users/admin]
Modify the admin account information, just for password.Only for the admin himself.<br/>
@Permission: Admin
+ Request (application/json)

        {
            AdminId: 11331125,
            AdminPwd:"admin123"
        }

+ Response 200 (application/json)

### Get admin information list [GET /api/users/admins]
Get admin information list.<br/>
@Permission: Admin

+ Response 200 (application/json)

        [
            {
                AdminId: 11331124,
                AdminPwd: "",
                AdminName: "赵毅",
                Permission: true
            },
            {
                AdminId: 11331125,
                AdminPwd: "",
                AdminName: "李阳",
                Permission: true
            },
            {
                AdminId: 11031124,
                AdminPwd: "",
                AdminName: "万余里",
                Permission: true
            }
        ]

### Add a admin to the database [POST /api/users/admins]
Add a approver account to the database.<br/> 
@Permission: Admin

+ Request (application/json)

        {
            AdminId: 11331124,
            AdminPwd: "",
            AdminName: "赵毅",
            Permission: true
        }
+ Response 200 (application/json)

### Get account information by id [GET /api/users/admins/{id}]
Get a admin information by id, need admin permission.<br/>
@Permission: Admin
+ Request (application/json)

        {
            AdminId: "15331124"
        }

+ Response 200 (application/json)

        {
            AdminId: 11331125,
            AdminPwd: "",
            AdminName: "李阳",
            Permission: true
        }

### Modify admin information by id [PUT /api/users/admins/{id}]
Modify a admin account information, just for password. It needs a admin permission.
If sucess, response 200; if failed, response 500.<br/>
@Permission: Admin
+  Request (application/json)

        {
            AdminId: 11331125,
            AdminPwd:"admin123"
        }

+ Response 200 (application/json)    

### Delete admin information by id [DELETE /api/users/admins/{id}]
Delete a admin account information, need admin permission. The admin can't delete himself account.
If sucess, response 200; if failed, response 500.<br/>
@Permission: Admin

+ Request (application/json)

        {
            AdminId: 11331125
        }

+ Response 200 (application/json)

## Classroom Data Interface

### Get classroom information list [GET /api/classrooms]
Get classroom information list.
@Permission: Admin

+ Response 200 (application/json)

        [
            {
                ClassroomId: 1,
                ClassroomCampus: "东校园",
                ClassroomBuilding: "公教楼",
                ClassroomNum: "A204",
                Capicity: 180
            },
            {
                ClassroomId: 2,
                ClassroomCampus: "南校园",
                ClassroomBuilding: "第一教学楼",
                ClassroomNum: "A104",
                Capicity: 100
            }
        ]

### Add a classroom to database [POST /api/classrooms]
Add a classroom information to database.
@Permission: Admin

+ Request (application/json)

        {
            ClassroomCampus: "东校园",
            ClassroomBuilding: "公教楼",
            ClassroomNum: "A204",
            Capicity: 180
        }

+ Response 200 (application/json)

### Get a classroom information by id [GET /api/classrooms/{id}]
Get a classroom information by id.
@Permission: Admin

+ Request (application/json)

        {
            ClassroomId: 1
        }

+ Response 200 (application/json)

        {
            ClassroomId: 1,
            ClassroomCampus: "东校园",
            ClassroomBuilding: "公教楼",
            ClassroomNum: "A204",
            Capicity: 180
        }

### Modify a classroom information by id [PUT /api/classrooms/{id}]
Must include all of the property of the classroom, although some need not to update.
@Permission: Admin

+ Request (application/json)

        {
            ClassroomId: 1,
            ClassroomCampus: "东校园",
            ClassroomBuilding: "公教楼",
            ClassroomNum: "A204",
            Capicity: 150
        }

+ Response 200 (application/json)

### Delete a classroom information by id [DELETE /api/classrooms/{id}]
@Permission: Admin

+ Request (application/json)

        {
            ClassroomId: 1
        }

+ Response 200 (application/json)

### Query classroom for reservation [GET /api/classrooms/state]
Necessary parameters: ClassroomCampus, ClassroomBuilding; <br/>
Optional parameters: Capicity, StartTime, EndTime.<br/>
Return the classrooms which are occupied during the query time and the classrooms which are idle.
@Permission: Student
+ Request (application/json)

        {
            ClassroomCampus: "东校园",
            ClassroomBuilding: "公教楼",
            Capicity: 60，
            StartTime: "2018-05-23 第一节课",
            EndTime: "2018-05-23 第八节课"
        }

+ Response 200 (application/json)

        [
            {
                ClassroomId: 1,
                ClassroomCampus: "东校园",
                ClassroomBuilding: "公教楼",
                Capicity: 180,
                Res: [
                    {
                        ResId: 23,
                        StartTime: "2018-05-23 第三节课",
                        EndTime: "2018-05-23 第五节课",
                        ResState: "预定成功",
                        ResReason: "计算机网络与组成"
                    }
                ]
            }
        ]

## Reservation Data Interface

### Get a reservation information by id [GET /api/reservations/{id}]
@Permission: Student, Approver, Admin
+ Request (application/json)

        {
            ResId: 1
        }

+ Response 200 (application/json)

        {
            ResId: 1,
            ResState: "审批中",
            StartTime: "2018-05-23 第三节课",
            EndTime: "2018-05-23 第五节课",
            ResReason: "社团面试",
            ApprovalNote: "批准",
            DepartmentId: 15,
            StudentId: 15331124,
            ApproverId: 10331124,
            ClassroomId: 1
        }

### Modify a reservation information by id [PUT /api/reservation/{id}]
For student, only can modify the reservation reason;<br/>
For approver, only can modify the reservation approvalNote, and then system modify the ResState/ApproverId/DepartmentId<br/>
eg: for approver
```
+ Request (application/json)
        
        {
            ResId: 1,
            ResState: "审批未通过",
            DepartmentId: 123,
            ApproverId: 10331124,
            ApproveNote: "场地不允许"
        }
+ Response 200 (application/json)


+ Request (application/json)
        
        {
            ResId: 1,
            ResState: "等待下一个部门审批",
            DepartmentId: 123,
            ApproverId: 10331124,
            ApproveNote: "批准"
        }
+ Response 200 (application/json)
```
@Permission: Student, Approver

+ Request (application/json)

        {
            ResId: 1,
            ResReason: "社团破冰"
        }

+ Response 200 (application/json)

### Delete a reservation information by id [DELETE /api/reservation/{id}}]
@Permission: Student

+ Request (application/json)

        {
            ResId: 1
        }

+ Response 200 (application/json)

### Student get reservation list [GET /api/users/student/reservatuons]
@Permission: Student

+ Response 200 (application/json)

        [
                {
                    ResId: 1,
                    ResState: "审批中",
                    StartTime: "2018-05-23 第三节课",
                    EndTime: "2018-05-23 第五节课",
                    ResReason: "社团面试",
                    ApprovalNote: "批准",
                    DepartmentId: 15,
                    StudentId: 15331124,
                    ApproverId: 10331124,
                    ClassroomId: 1
                },
                {
                    ResId: 2,
                    ResState: "预定失败",
                    StartTime: "2018-05-24 第八节课",
                    EndTime: "2018-05-24 第十节课",
                    ResReason: "生日party",
                    ApprovalNote: "不允许的活动",
                    DepartmentId: 15,
                    StudentId: 15331124,
                    ApproverId: 10331124,
                    ClassroomId: 3
                }
        ]

### Approver get reservation list [GET /api/users/student/reservatuons]
@Permission: Approver

+ Response 200 (application/json)

        [
                {
                    ResId: 1,
                    ResState: "审批中",
                    StartTime: "2018-05-23 第三节课",
                    EndTime: "2018-05-23 第五节课",
                    ResReason: "社团面试",
                    ApprovalNote: "批准",
                    DepartmentId: 15,
                    StudentId: 15331124,
                    ApproverId: 10331124,
                    ClassroomId: 1
                }
        ]

### Add a reservation to database [POST /api/users/student/reservations]
@Permission: Student

+ Request (application/json)

        {
                StartTime: "2018-05-25 第十三节课",
                EndTime: "2018-05-25 第十四节课",
                ResReason: "计网习题课",
                ClassroomId: 4
        }

+ Response 200 (application/json)

## Department Data Interface

### Get department information list [GET /api/departments]
@Permission: Admin

+ Response 200 (application/json)

        [
            {
                DepartmentId: 123,
                DepartmentName: 团委,
                Order: 1,
                Note: "initial"
            },
            {
                DepartmentId: 124,
                DepartmentName: 学院团委,
                Order: 2,
                Note: "middle"
            },
            {
                DepartmentId: 125,
                DepartmentName: 保卫办,
                Order: 3,
                Note: "final"
            }
        ]
### Add a department to database [POST /api/departmens]
@Permission: Admin

+ Request (application/json)

        {
            DepartmentName: 多媒体,
            Order: 4
        }

+ Response 200 (application/json)

### Get department information by id [GET /api/departments/{id}]
@Permission: Admin

+ Request (application/json)

        {
            DepartmentId: 123
        }

+ Response 200 (application/json)

        {
            DepartmentId: 123,
            DepartmentName: 团委,
            Order: 1,
            Note: "initial"
        }

### Update department information by id [PUT /api/department/{id}]
DepartmentId can't modify.<br/>
@Permission: Admin

+ Request (application/json)

        {
            DepartmentId: 123,
            DepartmentName: 团委,
            Order: 2
        }

+ Response 200 (application/json)

### Delete department information by id [DELETE /api/department/{id}]
Delete the department will result in the approver connected ddeleting.<br/>
@Permission: Admin

+ Request (application/json)

        {
            DepartmentId: 123
        }

+ Response 200 (application/json)